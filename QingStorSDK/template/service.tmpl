{{$service := .Data.Service}}
{{$subServices := .Data.SubServices }}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

using QingStorSDK.com.qingstor.sdk.Attribute;
using QingStorSDK.com.qingstor.sdk.config;
using QingStorSDK.com.qingstor.sdk.constants;
using QingStorSDK.com.qingstor.sdk.request;
using QingStorSDK.com.qingstor.sdk.model;
using QingStorSDK.com.qingstor.sdk.utils;
using QingStorSDK.com.qingstor.sdk.service;

{{if $service.Description}}
namespace QingStorSDK.com.qingstor.sdk.service
{
	 class QingStor 
	{
		private String zone;
		private EvnContext evnContext;
		private String bucketName;
		public QingStor(EvnContext evnContext)
		{
			this.evnContext = evnContext;
			this.zone = QSConstant.STOR_DEFAULT_ZONE;
		}

		public QingStor(EvnContext evnContext,String zone)
		{
			this.evnContext = evnContext;
			this.zone = zone;
		}

		{{range $_, $operation := $service.Operations}}
		{{$belongs := printf "%sService" ($service.Name | camelCase)}}
		{{template "RenderOperation" passThrough $belongs $operation}}
	{{end}}

		public QingStorSDK.com.qingstor.sdk.service.Bucket getBucket(String bucketName)
		{
			return new QingStorSDK.com.qingstor.sdk.service.Bucket(evnContext,zone,bucketName);
		}

		public com.qingstor.sdk.service.Bucket getBucket(String bucketName,String zone)
		{
            return new QingStorSDK.com.qingstor.sdk.service.Bucket(evnContext,zone,bucketName);
		}



	}
}
